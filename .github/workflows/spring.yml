name: Spring

on:
    push:
      branches:
        - main
    pull_request:
      branches:
        - main
      
jobs:
    compile:
        runs-on: ubuntu-latest
        name: compile spring
        steps:
            - name: Checkout Code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0
            
            - name: Set JDK
              uses: actions/setup-java@v4
              with:
                java-version: '21'
                distribution: 'temurin'
            
            - name: Compiling
              run: mvn -B package -DskipTests --file ./server/pom.xml
    tests:
        runs-on: ubuntu-latest
        name: Tests
        env:
          SPRING_MAIL_PASSWORD: ${{ secrets.MAIL_PASSWORD }}
          APP_ADMIN_USERNAME: ${{ secrets.ADMIN_USERNAME }}
          APP_ADMIN_PASSWORD: ${{ secrets.ADMIN_PASSWORD }}
          APP_ADMIN_EMAIL: ${{ secrets.ADMIN_EMAIL }}
          APP_ADMIN_NAME_FIRST: Nathan
          APP_ADMIN_NAME_LAST: Opperman
          APP_BASE_URL: http://localhost
          APP_KEY: ${{secrets.JWT_SIGNING_KEY }}
          APP_ENCRYPTION_KEY: ${{ secrets.DATABASE_ENCRYPTION_KEY }}
        steps:
            - name: Checkout code
              uses: actions/checkout@v4
              with:
                fetch-depth: 0

            - name: Set JDK
              uses: actions/setup-java@v4
              with:
                java-version: '21'
                distribution: 'temurin'
        
            - name: Running Tests
              run: mvn test --file ./server/pom.xml
    
    build-image:
      runs-on: ubuntu-latest
      name: Create Docker Image
      needs: [compile,tests]
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        
        - name: 'Login via Azure CLI'
          uses: azure/login@v1
          with:
            creds: ${{ secrets.AZURE_CREDENTIALS }}
          
        - name: 'Build and push image'
          uses: docker/login-action@v3
          with:
            registry: ${{ secrets.REGISTRY_LOGIN_SERVER }}
            username: ${{ secrets.AZURE_CLIENT_ID }}
            password: ${{ secrets.AZURE_CLIENT_SECRET }}
        - run: |
            docker build ./server -t ${{ secrets.REGISTRY_LOGIN_SERVER }}/server:${{ github.sha }}
            docker push ${{ secrets.REGISTRY_LOGIN_SERVER }}/server:${{ github.sha }}