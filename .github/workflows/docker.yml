name: Push ECR

on:
    push:
      branches:
        - dev
    pull_request:
      types: [closed]
      branches:
        - main

# While using Elastic Container Registry can have benifits in terms of security by using IAM Roles to allow access to the images, this is only available for paid subscriptions
# And I aint paying all that, but the principle remains
# However access write permissions is stil an important topic
# By perscribing fine grained limited access to the github user role access is made minimal
jobs:
    push-spring:
      name: Push Docker Server, Client and Proxy images to ECR
      runs-on: ubuntu-latest
      steps:
        - name: Checkout Code
          uses: actions/checkout@v4

        - name: Configure AWS credentials
          uses: aws-actions/configure-aws-credentials@v1
          with:
            aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
            aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
            aws-region: af-south-1
    
        - name: Login to Amazon ECR
          id: login-ecr
          uses: aws-actions/amazon-ecr-login@v2
          with:
            registry-type: public
    
        - name: Build, tag, and push the Server image to Amazon ECR
          id: build-server
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REGISTORY_ALIAS: n1f9p4k8
            ECR_REPOSITORY: server
            IMAGE_TAG: latest
          run: |
            docker build -f ./server/Dockerfile -t $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG

        - name: Build, tag, and push the Client image to Amazon ECR
          id: build-client
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REGISTORY_ALIAS: n1f9p4k8
            ECR_REPOSITORY: client
            IMAGE_TAG: latest
          run: |
            docker build -f ./client/Dockerfile -t $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG

        - name: Build, tag, and push the Proxy image to Amazon ECR
          id: build-proxy
          env:
            ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
            ECR_REGISTORY_ALIAS: n1f9p4k8
            ECR_REPOSITORY: proxy
            IMAGE_TAG: latest
          run: |
            docker build -f ./nginx/Dockerfile -t $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG .
            docker push $ECR_REGISTRY/$ECR_REGISTRY_ALIAS/$ECR_REPOSITORY:$IMAGE_TAG


    