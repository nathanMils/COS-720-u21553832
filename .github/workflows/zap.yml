name: OWASP ZAP Security Testing

on:
  push:
    branches:
      - dev

jobs:
    api_scan:
      runs-on: ubuntu-latest
      name: ZAP API Scan
      env:
        SERVER_PORT: 8081
        SPRING_MAIL_PASSWORD: placeholder_value
        APP_ADMIN_USERNAME: NathanOpp
        APP_ADMIN_PASSWORD: Stupidcat12!
        APP_ADMIN_EMAIL: nathanopperman123@gmail.com
        APP_ADMIN_NAME_FIRST: Nathan
        APP_ADMIN_NAME_LAST: Opperman
        APP_BASE_URL: http://localhost:3000
        APP_KEY: ${{secrets.JWT_SIGNING_KEY }}
        APP_ENCRYPTION_KEY: ${{ secrets.DATABASE_ENCRYPTION_KEY }}
      steps:
        - name: Checkout Code
          uses: actions/checkout@v4
          with:
            fetch-depth: 0
            
        - name: Set JDK
          uses: actions/setup-java@v4
          with:
            java-version: '21'
            distribution: 'temurin'

        # Bulding springboot application with a different maven profile to bring H2 database into runtime scope
        - name: Build Mvn Application
          run: mvn clean install -Ptest -DskipTests -f ./server/pom.xml
        
        # Running the JAR with the test configuration, runs in background
        - name: Run Spring Jar
          run: java -jar -Dspring.profiles.active=test ./server/target/server-0.0.1-SNAPSHOT.jar &
        
        - name: ZAP API Scan
          uses: zaproxy/action-api-scan@v0.7.0
          with:
            token: ${{ secrets.GITHUB_TOKEN }}
            target: 'http://localhost:8081/api/v1'

    # Runs fullstack application in a test mode using docker compose and then runs a baseline scan of the application
    # fullstack is required since nginx adds many headers to do with security: CSP, TLS, Anti clickjacking and many more
    baseline_scan:
        runs-on: ubuntu-latest
        name: ZAP Baseline Scan
        env:
          APP_KEY: ${{secrets.JWT_SIGNING_KEY }}
          APP_ENCRYPTION_KEY: ${{ secrets.DATABASE_ENCRYPTION_KEY }}
        steps:
          - name: Checkout Code
            uses: actions/checkout@v4
            with:
              fetch-depth: 0
              
          - name: Run Compose
            run: |
              docker compose -f compose.full.yml build
              docker compose -f compose.full.yml up -d

          - name: ZAP Scan
            uses: zaproxy/action-baseline@v0.12.0
            with:
              token: ${{ secrets.GITHUB_TOKEN }}
              rules_file_name: '.zap/rules.tsv'
              target: 'http://localhost'

      