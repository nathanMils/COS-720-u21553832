@startuml

actor "Client" as Client
box "Security FilterChain" #LightBlue
    participant "XSSFilter" as XSSFilter
    participant "JWTExceptionFilter" as JWTExceptionFilter
    participant "JWTTokenFilter" as JWTTokenFilter
    participant "UsernamePasswordAuthenticationFilter" as AuthFilter
end box
box "Authentication" #LightGreen
    participant "AuthenticationManager" as AuthManager
    participant "AuthenticationProvider" as AuthProvider
    participant "UserDetailsService" as UserDetailsService
end box
box "Web MVC" #LightPink
    participant "DispatcherServlet" as DispatcherServlet
    participant "HandlerMapping" as HandlerMapping
    participant "Controller" as Controller
    participant "Service" as Service
    participant "Repository" as Repository
end box
box "Database" #LightYellow
    participant "UserDetails" as UserDetails
end box

autonumber

Client -> XSSFilter: Send Request
activate XSSFilter
XSSFilter -> XSSFilter: Sanitize Request
XSSFilter -> JWTExceptionFilter: doFilter
deactivate XSSFilter
activate JWTExceptionFilter
JWTExceptionFilter -> JWTTokenFilter: Forward Request
activate JWTTokenFilter
JWTTokenFilter -> JWTTokenFilter: Check if JWT Token is Valid
alt Token is Valid
    JWTTokenFilter -> AuthFilter: Forward Request
    activate AuthFilter
    AuthFilter -> AuthFilter: Attempt Authentication
    AuthFilter -> AuthManager: Authenticate
    AuthManager -> AuthProvider: Retrieve User Details
    AuthProvider -> UserDetailsService: Load User Details
    UserDetailsService -> UserDetails: Retrieve User Details
    AuthFilter -> AuthFilter: Set Authentication in Security Context
else Token is Invalid
    JWTTokenFilter -> JWTExceptionFilter: Exception (Invalid/Expired Token)
    deactivate JWTTokenFilter
    JWTExceptionFilter -> JWTExceptionFilter: Handle Exception
end
deactivate JWTExceptionFilter

'Client -> Request: Send Request
'Request -> XSSFilter: Intercept Request
'XSSFilter -> XSSFilter: Sanitize Request
'XSSFilter -> AuthFilter: Forward Request
'AuthFilter -> AuthFilter: Attempt Authentication
'AuthFilter -> AuthManager: Authenticate
'AuthManager -> AuthProvider: Retrieve User Details
'AuthProvider -> UserDetailsService: Load User Details
'UserDetailsService -> UserDetails: Retrieve User Details
'AuthFilter -> AuthFilter: Create Authentication Token
'AuthFilter -> AuthFilter: Set Authentication in Security Context
'AuthFilter -> Response: Return Response

@enduml